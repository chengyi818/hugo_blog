<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>为学日益,为道日损</title><link>http://blog.yitinglove.cn/</link><description>Recent content on 为学日益,为道日损</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 14 Nov 2021 21:50:55 +0800</lastBuildDate><atom:link href="http://blog.yitinglove.cn/index.xml" rel="self" type="application/rss+xml"/><item><title>Arm64异常模型</title><link>http://blog.yitinglove.cn/post/cpu_arch/aarch64_exception_model/</link><pubDate>Sun, 14 Nov 2021 21:50:55 +0800</pubDate><guid>http://blog.yitinglove.cn/post/cpu_arch/aarch64_exception_model/</guid><description>&lt;p>无论在x86还是arm中都有类似CPU执行等级的设计,较高的执行等级可以管理更多的资源,执行更多的指令. 而较低权限的执行等级则受限于硬件机制设计,从而可以在某种安全边界内运行.
本文主要翻译自Armv8-A官方文档,用于学习Arm的执行等级设计. 同时类比x86系统,相互印证.&lt;/p></description></item><item><title>工作之余的技术成长</title><link>http://blog.yitinglove.cn/post/system/always_do_extra/</link><pubDate>Tue, 19 Oct 2021 22:34:42 +0800</pubDate><guid>http://blog.yitinglove.cn/post/system/always_do_extra/</guid><description>弱相关 最近在hackernew上读到一篇:Always do Extra. 和自己之前的想法比较有共鸣.大多数开发人员的工作不可避免地会有某种重复和套路,这会</description></item><item><title>PARA知识分类方法</title><link>http://blog.yitinglove.cn/post/system/para_knowledge/</link><pubDate>Tue, 21 Sep 2021 21:42:00 +0800</pubDate><guid>http://blog.yitinglove.cn/post/system/para_knowledge/</guid><description>知识管理的问题 当前知识管理很容易遇到两类问题: 搜集狂: 只管收藏和购买,没有投入时间学习,看似搜集了一堆材料,个人成长为零. 狗熊掰苞米: 每次都</description></item><item><title>卡片盒学习法</title><link>http://blog.yitinglove.cn/post/system/zettelkasten_notes/</link><pubDate>Sat, 18 Sep 2021 21:21:04 +0800</pubDate><guid>http://blog.yitinglove.cn/post/system/zettelkasten_notes/</guid><description>缘起 之前看过左耳朵耗子写的关于程序员成长的一篇blog, 里面在谈到程序员成长的部分, 推荐大家每周完成ARTS: Algorithm: 每周完成一道leetcode</description></item><item><title>rust语言设计理念和社区导向</title><link>http://blog.yitinglove.cn/post/rust/rustacean_principles/</link><pubDate>Sun, 12 Sep 2021 19:49:35 +0800</pubDate><guid>http://blog.yitinglove.cn/post/rust/rustacean_principles/</guid><description>前言 rust作为目前比较受欢迎的新兴语言,能够比较好的兼顾安全性和性能. 我们通过参考资料1来了解rust语言设计和社区的一些理念. 这些理念分</description></item><item><title>成胖子的xv6之旅</title><link>http://blog.yitinglove.cn/post/redirect/2018-05-04-xv6-journey/</link><pubDate>Fri, 04 May 2018 19:46:40 +0800</pubDate><guid>http://blog.yitinglove.cn/post/redirect/2018-05-04-xv6-journey/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>C语言基础, 操作系统爱好者&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>最近博客更新比较少,是因为我今年的主要学习方向是系统性完成对操作系统主要概念,框架的掌握.因此我给自己安排的计划主要包括如下内容:&lt;/p></description></item><item><title>Python虚拟机初始化</title><link>http://blog.yitinglove.cn/post/python/2018-01-19-python%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%88%9D%E5%A7%8B%E5%8C%96/</link><pubDate>Fri, 19 Jan 2018 19:56:17 +0800</pubDate><guid>http://blog.yitinglove.cn/post/python/2018-01-19-python%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%88%9D%E5%A7%8B%E5%8C%96/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>C语言基础, Python虚拟机基本了解&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;strong>Python源码剖析&lt;/strong>一书的第二部分主要讲述了虚拟机主循环是如何运行的.那么在命令行启动python之后,到执行主循环之前都经历了哪些事情呢?这是我们今天要解决的问题.&lt;/p></description></item><item><title>Python对象模型之我见</title><link>http://blog.yitinglove.cn/post/python/2018-01-14-python%E5%85%83%E7%B1%BB%E4%B9%8B%E6%88%91%E8%A7%81/</link><pubDate>Sun, 14 Jan 2018 19:09:42 +0800</pubDate><guid>http://blog.yitinglove.cn/post/python/2018-01-14-python%E5%85%83%E7%B1%BB%E4%B9%8B%E6%88%91%E8%A7%81/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>C语言基础,Python对象模型基本了解&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在深入学习Python的过程中,不可避免地会接触到这样的概念:&lt;/p>
&lt;blockquote>
&lt;p>在Python中一切都是对象&lt;/p>
&lt;/blockquote>
&lt;p>这个&lt;strong>一切&lt;/strong>甚至比我想象的还要深入,因为在Python的实现层面也都是用面向对象实现的.那么与对象模型相关的&lt;code>类&lt;/code>,&lt;code>实例&lt;/code>的概念是不是也是用面向对象实现的呢?是的,在Python中,类的定义本身也是一个对象.&lt;/p></description></item><item><title>Python虚拟机框架_上</title><link>http://blog.yitinglove.cn/post/python/2017-12-09-python%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A1%86%E6%9E%B6-%E4%B8%8A/</link><pubDate>Sat, 09 Dec 2017 20:22:50 +0800</pubDate><guid>http://blog.yitinglove.cn/post/python/2017-12-09-python%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A1%86%E6%9E%B6-%E4%B8%8A/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>C语言基础, Python爱好者&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前面我们已经谈到过python面向对象的实现.今天我们来看看Python虚拟机的基础.&lt;/p>
&lt;p>主要内容分为两个部分:&lt;/p>
&lt;ol>
&lt;li>Python源码编译后的结果: .pyc文件和PyCodeObject对象.&lt;/li>
&lt;li>Python的模拟函数栈帧: PyFrameObject对象.&lt;/li>
&lt;/ol></description></item><item><title>Python对象模型</title><link>http://blog.yitinglove.cn/post/python/2017-10-19-python%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/</link><pubDate>Thu, 19 Oct 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/python/2017-10-19-python%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>C语言基础, Python爱好者&lt;/p>
&lt;/blockquote>
&lt;hr></description></item><item><title>干法_读书笔记</title><link>http://blog.yitinglove.cn/post/books/2017-09-27-%E5%B9%B2%E6%B3%95-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</link><pubDate>Wed, 27 Sep 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/books/2017-09-27-%E5%B9%B2%E6%B3%95-%E8%AF%BB%E4%B9%A6%E7%AC%94%E8%AE%B0/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>适合所有人&lt;/p>
&lt;/blockquote>
&lt;hr></description></item><item><title>字符编解码篇四</title><link>http://blog.yitinglove.cn/post/encode/2017-09-22-%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E7%AF%87%E5%9B%9B/</link><pubDate>Fri, 22 Sep 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/encode/2017-09-22-%E5%AD%97%E7%AC%A6%E7%BC%96%E7%A0%81%E7%AF%87%E5%9B%9B/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>对字符编解码有一些了解,但是又不够深入,在实际项目中遇到问题有些束手无措的同学&lt;/p>
&lt;/blockquote>
&lt;hr></description></item><item><title>字符编解码篇三</title><link>http://blog.yitinglove.cn/post/encode/2017-09-14-%E5%AD%97%E7%AC%A6%E7%BC%96%E8%A7%A3%E7%A0%81%E7%AF%87%E4%B8%89/</link><pubDate>Thu, 14 Sep 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/encode/2017-09-14-%E5%AD%97%E7%AC%A6%E7%BC%96%E8%A7%A3%E7%A0%81%E7%AF%87%E4%B8%89/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>对字符编解码有一些了解,但是又不够深入,在实际项目中遇到问题有些束手无措的同学&lt;/p>
&lt;/blockquote>
&lt;hr></description></item><item><title>字符编解码_篇二</title><link>http://blog.yitinglove.cn/post/encode/2017-09-10-%E5%AD%97%E7%AC%A6%E7%BC%96%E8%A7%A3%E7%A0%81%E7%AF%87%E4%BA%8C/</link><pubDate>Sun, 10 Sep 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/encode/2017-09-10-%E5%AD%97%E7%AC%A6%E7%BC%96%E8%A7%A3%E7%A0%81%E7%AF%87%E4%BA%8C/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>对字符编解码有一些了解,但是又不够深入,在实际项目中遇到问题有些束手无措的同学&lt;/p>
&lt;/blockquote>
&lt;hr></description></item><item><title>字符编解码_篇一</title><link>http://blog.yitinglove.cn/post/encode/2017-08-20-%E5%AD%97%E7%AC%A6%E7%BC%96%E8%A7%A3%E7%A0%81%E7%AF%87%E4%B8%80/</link><pubDate>Sun, 20 Aug 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/encode/2017-08-20-%E5%AD%97%E7%AC%A6%E7%BC%96%E8%A7%A3%E7%A0%81%E7%AF%87%E4%B8%80/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>对字符编解码有一些了解,但是又不够深入,在实际项目中遇到问题有些束手无措的同学&lt;/p>
&lt;/blockquote>
&lt;hr></description></item><item><title>Ubuntu 14.04保存屏幕亮度</title><link>http://blog.yitinglove.cn/post/linux_shell/2017-06-12-save-brightness-on-ubuntu-14-04/</link><pubDate>Mon, 12 Jun 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/linux_shell/2017-06-12-save-brightness-on-ubuntu-14-04/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>Ubuntu 14.04使用者&lt;/p>
&lt;/blockquote>
&lt;hr></description></item><item><title>vim从入门到放弃_篇四</title><link>http://blog.yitinglove.cn/post/emacs/2017-04-23-vim_to_emacs_4/</link><pubDate>Sun, 23 Apr 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/emacs/2017-04-23-vim_to_emacs_4/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>编辑器爱好者,了解vim基本使用&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>篇一: &lt;a href="http://yitinglove.cn/blog/2017/03/19/vim_to_emacs_1/">初识vim&lt;/a>
篇二: &lt;a href="http://yitinglove.cn/blog/2017/03/26/vim_to_emacs_2/">vim的配置与使用&lt;/a>
篇三: &lt;a href="http://yitinglove.cn/blog/2017/04/04/vim_to_emacs_3/">vim的不足和新的选择&lt;/a>
篇四: &lt;a href="http://yitinglove.cn/blog/2017/04/23/vim_to_emacs_4/">spacemacs入门&lt;/a>&lt;/p></description></item><item><title>vim从入门到放弃_篇三</title><link>http://blog.yitinglove.cn/post/emacs/2017-04-04-vim_to_emacs_3/</link><pubDate>Tue, 04 Apr 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/emacs/2017-04-04-vim_to_emacs_3/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>编辑器爱好者,了解vim基本使用&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>篇一: &lt;a href="http://yitinglove.cn/blog/2017/03/19/vim_to_emacs_1/">初识vim&lt;/a>
篇二: &lt;a href="http://yitinglove.cn/blog/2017/03/26/vim_to_emacs_2/">vim的配置与使用&lt;/a>
篇三: &lt;a href="http://yitinglove.cn/blog/2017/04/04/vim_to_emacs_3/">vim的不足和新的选择&lt;/a>
篇四: &lt;a href="http://yitinglove.cn/blog/2017/04/23/vim_to_emacs_4/">spacemacs入门&lt;/a>&lt;/p></description></item><item><title>vim从入门到放弃_篇二</title><link>http://blog.yitinglove.cn/post/emacs/2017-03-26-vim_to_emacs_2/</link><pubDate>Sun, 26 Mar 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/emacs/2017-03-26-vim_to_emacs_2/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>编辑器爱好者,了解vim基本使用&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>篇一: &lt;a href="http://yitinglove.cn/blog/2017/03/19/vim_to_emacs_1/">初识vim&lt;/a>
篇二: &lt;a href="http://yitinglove.cn/blog/2017/03/26/vim_to_emacs_2/">vim的配置与使用&lt;/a>
篇三: &lt;a href="http://yitinglove.cn/blog/2017/04/04/vim_to_emacs_3/">vim的不足和新的选择&lt;/a>
篇四: &lt;a href="http://yitinglove.cn/blog/2017/04/23/vim_to_emacs_4/">spacemacs入门&lt;/a>&lt;/p></description></item><item><title>vim从入门到放弃_篇一</title><link>http://blog.yitinglove.cn/post/emacs/2017-03-19-vim_to_emacs_1/</link><pubDate>Sun, 19 Mar 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/emacs/2017-03-19-vim_to_emacs_1/</guid><description>&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>编辑器爱好者,了解vim基本使用&lt;/p>
&lt;/blockquote>
&lt;hr>
&lt;p>篇一: &lt;a href="http://yitinglove.cn/blog/2017/03/19/vim_to_emacs_1/">初识vim&lt;/a>
篇二: &lt;a href="http://yitinglove.cn/blog/2017/03/26/vim_to_emacs_2/">vim的配置与使用&lt;/a>
篇三: &lt;a href="http://yitinglove.cn/blog/2017/04/04/vim_to_emacs_3/">vim的不足和新的选择&lt;/a>
篇四: &lt;a href="http://yitinglove.cn/blog/2017/04/23/vim_to_emacs_4/">spacemacs入门&lt;/a>&lt;/p></description></item><item><title>把Effective Python读薄之三</title><link>http://blog.yitinglove.cn/post/python/2017-03-14-effective-python_3/</link><pubDate>Tue, 14 Mar 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/python/2017-03-14-effective-python_3/</guid><description>&lt;p>本文是我总结的Effective Python的第三章&lt;/p>
&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>掌握Python类的基本使用&lt;/p>
&lt;/blockquote></description></item><item><title>把Effective Python读薄之二</title><link>http://blog.yitinglove.cn/post/python/2017-02-18-effective-python_2/</link><pubDate>Sat, 18 Feb 2017 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/python/2017-02-18-effective-python_2/</guid><description>&lt;p>本文是我总结的Effective Python的第二章&lt;/p>
&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>掌握Python基本语法&lt;/p>
&lt;/blockquote></description></item><item><title>把Effective Python读薄之一</title><link>http://blog.yitinglove.cn/post/python/2016-12-18-effective-python_1/</link><pubDate>Sun, 18 Dec 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/python/2016-12-18-effective-python_1/</guid><description>&lt;p>这两天看到一篇博客,名为&amp;lt;把编程珠玑读薄&amp;gt;,是为名.&lt;/p>
&lt;p>本文是我总结的Effective Python的第一章&lt;/p>
&lt;p>阅读条件:&lt;/p>
&lt;blockquote>
&lt;p>掌握Python基本语法&lt;/p>
&lt;/blockquote></description></item><item><title>Python模块和包</title><link>http://blog.yitinglove.cn/post/python/2016-11-26-python%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/</link><pubDate>Sat, 26 Nov 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/python/2016-11-26-python%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/</guid><description/></item><item><title>xmodmap小结</title><link>http://blog.yitinglove.cn/post/tools/2016-11-05-xmodmap/</link><pubDate>Sat, 05 Nov 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-11-05-xmodmap/</guid><description/></item><item><title>我的chrome续</title><link>http://blog.yitinglove.cn/post/tools/2016-04-23-%E6%88%91%E7%9A%84chrome%E7%BB%AD/</link><pubDate>Sat, 23 Apr 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-04-23-%E6%88%91%E7%9A%84chrome%E7%BB%AD/</guid><description>&lt;p>chrome是一个非常强大的工具,可能很快就要成为市占率第一的浏览器了.&lt;/p>
&lt;p>本周我们来看看chrome的一些不广为人知的功能.&lt;/p></description></item><item><title>我的chrome_插件篇</title><link>http://blog.yitinglove.cn/post/tools/2016-04-09-%E6%88%91%E7%9A%84chrome_%E6%8F%92%E4%BB%B6%E7%AF%87/</link><pubDate>Sat, 09 Apr 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-04-09-%E6%88%91%E7%9A%84chrome_%E6%8F%92%E4%BB%B6%E7%AF%87/</guid><description>&lt;p>本周是成胖子每周一博的第十七周 😄&lt;/p>
&lt;hr>
&lt;h2 id="1前言">1.前言&lt;/h2>
&lt;p>以前曾经看过一期王自如的评测节目,里面提到用chrome是一种情怀.我虽然以前知道chrome很强大,但是一直没有时间好好搜集学习下.&lt;/p></description></item><item><title>工具说_窗口管理器i3实用软件</title><link>http://blog.yitinglove.cn/post/tools/2016-04-02-%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8i3%E7%BB%AD/</link><pubDate>Sat, 02 Apr 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-04-02-%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8i3%E7%BB%AD/</guid><description>&lt;p>本周是成胖子每周一博的第十六周 😄&lt;/p>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>使用i3一周了,感觉还不错.下图是我目前的桌面.&lt;/p>
&lt;p>&lt;img src="http://ww1.sinaimg.cn/large/006kvZhRgw1f2dkku1ztoj30zk0qotai.jpg" alt="桌面">&lt;/p>
&lt;p>三个显示器全部接在同一台电脑上,大部分操作由键盘完成.&lt;/p>
&lt;p>实际使用中,我们还需要一些辅助的软件.&lt;/p></description></item><item><title>平铺式窗口管理器i3</title><link>http://blog.yitinglove.cn/post/tools/2016-03-27-%E5%B9%B3%E9%93%BA%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8i3/</link><pubDate>Sun, 27 Mar 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-03-27-%E5%B9%B3%E9%93%BA%E7%AA%97%E5%8F%A3%E7%AE%A1%E7%90%86%E5%99%A8i3/</guid><description>&lt;p>本周是成胖子每周一博的第十五周 😄&lt;/p>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>&lt;img src="http://ww1.sinaimg.cn/large/006kvZhRjw1f2bm4kl8afj30af06imyd.jpg" alt="最终效果图">&lt;/p>
&lt;p>小伙伴们感觉这个桌面炫酷不炫酷?&lt;/p></description></item><item><title>翻墙之我见</title><link>http://blog.yitinglove.cn/post/tools/2016-03-19-%E7%BF%BB%E5%A2%99%E4%B9%8B%E6%88%91%E8%A7%81/</link><pubDate>Sat, 19 Mar 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-03-19-%E7%BF%BB%E5%A2%99%E4%B9%8B%E6%88%91%E8%A7%81/</guid><description>&lt;p>本周是成胖子每周一博的第十四周😄&lt;/p>
&lt;hr>
&lt;h2 id="写在前面">写在前面&lt;/h2>
&lt;p>本来这周的博客就是想单纯地介绍下翻墙的工具和一些软件推荐的,捎带着介绍下最简单的原理.搜资料搜到一段话,稍有感触.&lt;/p>
&lt;blockquote>
&lt;p>作为个搞技术的人，我们要干点疯狂的事。如果我们不动手，我们就要被比我们差的远的坏技术人员欺负。这太丢人了。眼前就是，GFW这个东西，之前是我们不抱团，让它猖狂了。现在咱们得凑一起，想出来一个办法让它郁闷一下，不能老被欺负吧。要不，等到未来，后代会嘲笑我们这些没用的家伙，就象我们说别人“你怎么不反抗？”&lt;/p>
&lt;/blockquote></description></item><item><title>dotfiles总述</title><link>http://blog.yitinglove.cn/post/tools/2016-03-12-dotfiles%E6%80%BB%E8%BF%B0/</link><pubDate>Sat, 12 Mar 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-03-12-dotfiles%E6%80%BB%E8%BF%B0/</guid><description>&lt;p>本周是成胖子每周一博的第十三周:)&lt;/p>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>在github上偶然浏览到&lt;a href="https://dotfiles.github.io/">dotfiles&lt;/a>.&lt;/p>
&lt;blockquote>
&lt;p>因为Unix及Linux下的很多配置文件都是隐藏文件,以&amp;quot;.&amp;ldquo;开始,所以我们用dotfiles称呼这些文件.&lt;/p>
&lt;/blockquote></description></item><item><title>Linux工具推荐</title><link>http://blog.yitinglove.cn/post/tools/2016-03-05-linux%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/</link><pubDate>Sat, 05 Mar 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-03-05-linux%E5%B7%A5%E5%85%B7%E6%8E%A8%E8%8D%90/</guid><description>&lt;p>本周是成胖子每周一博的第十二周:)&lt;/p>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>我日常工作基本都在Linux下,记得刚从windows迁移到Linux时,总是担心Linux能否胜任我的要求.目前看来绝大多数工作,Linux都可以完成地很好.本周我来介绍下,我觉得很不错的一些软件.&lt;/p>
&lt;p>我使用的是Linux Mint 17.3 rosa.软件排名不分先后,推荐尝试.&lt;/p></description></item><item><title>时间管理pomotodo</title><link>http://blog.yitinglove.cn/post/tools/2016-02-27-pomotodo/</link><pubDate>Sat, 27 Feb 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-02-27-pomotodo/</guid><description>&lt;p>春节放假休息了两周
本周是成胖子每周一博的第十一周:)&lt;/p>
&lt;hr>
&lt;h2 id="1前言">1.前言&lt;/h2>
&lt;p>前面我们谈到过GTD工作法及其软件doit.这主要是将目标分解为项目,再将项目分解为行动.最后的粒度将是今天一个具体的行动,比如写一篇博客.&lt;/p>
&lt;p>现在我遇到的问题是:&lt;/p>
&lt;ol>
&lt;li>
&lt;p>一个行动往往需要数个小时,在这过程当中怎么保持专注?&lt;/p>
&lt;/li>
&lt;li>
&lt;p>我们都知道久坐对身体的危害.工作时往往会忽视时间的流逝(心流).怎样定时休息呢?&lt;/p>
&lt;/li>
&lt;/ol>
&lt;p>我的答案是&amp;mdash;&lt;strong>番茄工作法&lt;/strong>&lt;/p></description></item><item><title>个人事务管理doit.im</title><link>http://blog.yitinglove.cn/post/tools/2016-02-08-%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86gtd/</link><pubDate>Mon, 08 Feb 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-02-08-%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86gtd/</guid><description>&lt;p>本周是成胖子每周一博的第十周:)&lt;/p>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>偶然在朋友圈看到朋友发了说状态,说&lt;code>omnifocus&lt;/code>很炫酷.我当然也不知道是个啥?查了一下,说是一个GTD软件.顺藤摸瓜,我就接触到了所谓第四代时间管理的理念.&lt;a href="https://en.wikipedia.org/wiki/Getting_Things_Done">GTD简介&lt;/a>&lt;/p>
&lt;blockquote>
&lt;p>老人言:不但要埋头拉车,也要抬头看路.&lt;/p>
&lt;/blockquote>
&lt;p>简要来讲,GTD就是以流程化的方式,处理了从目标到具体行动的一系列问题.迫使我们进行思考,从而将个人事务处理的比较有条理.&lt;/p></description></item><item><title>工具说总序_道器论</title><link>http://blog.yitinglove.cn/post/tools/2016-01-30-%E5%B7%A5%E5%85%B7%E8%AF%B4%E6%80%BB%E5%BA%8F/</link><pubDate>Sat, 30 Jan 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-01-30-%E5%B7%A5%E5%85%B7%E8%AF%B4%E6%80%BB%E5%BA%8F/</guid><description>&lt;p>本周是成胖子每周一博的第九周:)&lt;/p>
&lt;hr>
&lt;p>##前言&lt;/p>
&lt;p>我少时浑浑噩噩,性情浮躁.每且凭借些许急智勉强度日.及至大学,沉溺于游戏之中,昏天黑地.毕业后无一技傍身,又蹉跎两年,勉强混个硕士文凭.大好时光,空耗数年.&lt;/p>
&lt;p>很感激毕业时有企业收留了我,领我进入了Linux和编程的世界.这里花团锦簇,令人目不暇接,只恨不得分出几个身子同时学习才好.每每暗自懊恼荒废的大好时光.&lt;/p>
&lt;blockquote>
&lt;p>种树最好的时间是二十年前,第二好的时间是现在.&lt;/p>
&lt;/blockquote>
&lt;p>现在稍有觉悟,每日阅读精进,这篇算是我的元认知.&lt;/p></description></item><item><title>思维导图xmind</title><link>http://blog.yitinglove.cn/post/tools/2016-01-24-%E5%B7%A5%E5%85%B7%E8%AF%B4_%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</link><pubDate>Sun, 24 Jan 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/tools/2016-01-24-%E5%B7%A5%E5%85%B7%E8%AF%B4_%E6%80%9D%E7%BB%B4%E5%AF%BC%E5%9B%BE/</guid><description>&lt;p>本周是成胖子每周一博第八周.&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p> 我从小就有很强的好奇心,看到新鲜东西总想着试试.现在算是半只脚踏入Linux的门槛,可以看到很多好玩的东西,令人眼花缭乱.我现在就像一个圆,随着里面的面积越来越大,周长越来越长,和外面未知世界的接触面积也越来越大,内心也越来越焦灼.愈发地感觉时不我待,要看要学要做的事情太多了.&lt;/p></description></item><item><title>第一个lxc容器</title><link>http://blog.yitinglove.cn/post/linux_shell/2016-01-17-%E7%AC%AC%E4%B8%80%E4%B8%AAlxc%E5%AE%B9%E5%99%A8/</link><pubDate>Sun, 17 Jan 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/linux_shell/2016-01-17-%E7%AC%AC%E4%B8%80%E4%B8%AAlxc%E5%AE%B9%E5%99%A8/</guid><description>&lt;p>本周是成胖子每周一博的第七周:)&lt;/p>
&lt;hr>
&lt;p>##前言&lt;/p>
&lt;p>  我的工作是做路由器开发的.为了实现一次开发在不同平台的快速部署,我们尝试在路由器运行LXC容器.通过它来实现我们的虚拟化目标,我们通过打开内核开关,交叉编译lxc工具以及制作基于busybox的简单文件系统,已经达到了基本目标.同时我们在容器内移植了openwrt的opkg功能,使得容器内部可以通过opkg的方式快速安装ipk,从而在传统路由器上快速实现了openwrt的特色功能.&lt;/p></description></item><item><title>openwrt编译打包过程</title><link>http://blog.yitinglove.cn/post/openwrt/2016-01-10-openwrt%E6%89%93%E5%8C%85%E8%BF%87%E7%A8%8B/</link><pubDate>Sun, 10 Jan 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/openwrt/2016-01-10-openwrt%E6%89%93%E5%8C%85%E8%BF%87%E7%A8%8B/</guid><description>&lt;p>本周是成胖子每周一博第六周,更好地阅读体验,请点击&lt;a href="https://www.zybuluo.com/icyriver/note/258252">这里&lt;/a>&lt;/p>
&lt;hr>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p> 前面我们已经讲了openwrt编译的大部分过程,包括大致的编译步骤,ipk的编译等.今天是我这个系列的最后一篇,我们来看看openwrt的各个部分是如何组织成为最后的bin文件的.&lt;/p></description></item><item><title>openwrt单个ipk编译过程</title><link>http://blog.yitinglove.cn/post/openwrt/2016-01-03-openwrt%E5%8D%95%E4%B8%AAipk%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/</link><pubDate>Sun, 03 Jan 2016 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/openwrt/2016-01-03-openwrt%E5%8D%95%E4%B8%AAipk%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B/</guid><description>&lt;p>本周是成胖子每周一博的第五周.
更好的阅读体验,请点击&lt;a href="https://www.zybuluo.com/icyriver/note/257687">这里&lt;/a>&lt;/p></description></item><item><title>openwrt主Makefile解析</title><link>http://blog.yitinglove.cn/post/openwrt/2015-12-26-openwrt%E4%B8%BBmakefile%E8%A7%A3%E6%9E%90/</link><pubDate>Sat, 26 Dec 2015 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/openwrt/2015-12-26-openwrt%E4%B8%BBmakefile%E8%A7%A3%E6%9E%90/</guid><description>&lt;p>本周成胖子每周一博到了第四周&lt;/p>
&lt;h2 id="前言">前言&lt;/h2>
&lt;p>前一篇,我们大概描述了整个镜像文件的生成过程.本周我们来解析主Makefile,看看主要编译过程是怎么产生的.&lt;/p></description></item><item><title>openwrt编译过程概述</title><link>http://blog.yitinglove.cn/post/openwrt/2015-12-20-%E6%88%91%E7%9A%84makefile%E5%AD%A6%E4%B9%A0%E5%86%B2%E5%8A%A8and%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E6%A6%82%E8%BF%B0/</link><pubDate>Sun, 20 Dec 2015 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/openwrt/2015-12-20-%E6%88%91%E7%9A%84makefile%E5%AD%A6%E4%B9%A0%E5%86%B2%E5%8A%A8and%E7%BC%96%E8%AF%91%E8%BF%87%E7%A8%8B%E6%A6%82%E8%BF%B0/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>又到了成胖子每周一博的时间了,本周是第三周.
本周我们继续了解&lt;code>openwrt&lt;/code>的编译过程,如果还有没写过简单ipk或者编译过openwrt的朋友,可以参见我之前的&lt;a href="http://blog.csdn.net/icy_river/article/details/48260859">博客&lt;/a>或者网上的其他&lt;a href="https://www.baidu.com/s?wd=%E7%BC%96%E8%AF%91openwrt&amp;amp;rsv_spt=1&amp;amp;rsv_iqid=0x8f1fcaec0016b4fc&amp;amp;issp=1&amp;amp;f=8&amp;amp;rsv_bp=0&amp;amp;rsv_idx=2&amp;amp;ie=utf-8&amp;amp;tn=baiduhome_pg&amp;amp;rsv_enter=1&amp;amp;rsv_sug3=15&amp;amp;rsv_sug1=10">文章&lt;/a>&lt;/p></description></item><item><title>openwrt目录概述</title><link>http://blog.yitinglove.cn/post/openwrt/2015-12-13-openwrt%E6%BA%90%E7%A0%81%E7%9B%AE%E5%BD%95%E6%A6%82%E8%BF%B0/</link><pubDate>Sun, 13 Dec 2015 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/openwrt/2015-12-13-openwrt%E6%BA%90%E7%A0%81%E7%9B%AE%E5%BD%95%E6%A6%82%E8%BF%B0/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p> 这段时间总是在和&lt;a href="https://en.wikipedia.org/wiki/OpenWrt">openwrt&lt;/a>打交道,之前也零零散散地写过一点，还是希望能有点体系。还记得我刚看到源代码的时候，觉得无从下手.我想从Makefile的整个执行过程入手,搞清楚编译源代码的几个小时中,到底发生了哪些故事.&lt;/p>
&lt;p> 本文是这个系列的第一篇.主要讲一下我对openwrt整个目录结构的理解.我们将源代码从&lt;a href="https://dev.openwrt.org/wiki/GetSource">官方下载&lt;/a>而来的目录称之为原始目录,将编译后生成的目录称之为生成目录,分两部分介绍各个目录.&lt;/p></description></item><item><title>Openwrt LuCI模块练习详细步骤</title><link>http://blog.yitinglove.cn/post/openwrt/2015-09-02-openwrt_luci%E6%A8%A1%E5%9D%97%E7%BB%83%E4%B9%A0%E8%AF%A6%E7%BB%86%E6%AD%A5%E9%AA%A4/</link><pubDate>Wed, 02 Sep 2015 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/openwrt/2015-09-02-openwrt_luci%E6%A8%A1%E5%9D%97%E7%BB%83%E4%B9%A0%E8%AF%A6%E7%BB%86%E6%AD%A5%E9%AA%A4/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>又到了成胖子每周一博的时间了.最近在学习openwrt luci方面的知识,为了贯穿整个知识体系,练习题目为:&lt;/p>
&lt;blockquote>
&lt;p>通过页面配置周期性地往/tmp/addtest文件写入内容和时间戳&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>1.在web主页面的下拉菜单做一个按钮,进入设置页面;&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>2.两个设置项:输入的内容和周期;&lt;/p>
&lt;/blockquote>
&lt;blockquote>
&lt;p>3.读取/tmp/addtest中的内容并显示在页面上;&lt;/p>
&lt;/blockquote>
&lt;p>代码已经&lt;a href="https://github.com/chengyi818/addtest">开源&lt;/a>,欢迎交流~&lt;/p></description></item><item><title>openwrt简单ipk生成及Makefile解释</title><link>http://blog.yitinglove.cn/post/openwrt/2015-08-31-helloworld-ipk/</link><pubDate>Mon, 31 Aug 2015 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/openwrt/2015-08-31-helloworld-ipk/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>类似的文章其实网上比较多了,我写这个的目的:&lt;/p>
&lt;blockquote>
&lt;p>1,网上文章良莠不齐,有些自己都没实际动手操作,随便复制粘贴,实际操作不可行.
2,基本只讲了操作,我当时最关心的Makefile文件的解释没有.&lt;/p>
&lt;/blockquote>
&lt;p>所以我自己总结了一篇.&lt;/p></description></item><item><title>xargs用法详解</title><link>http://blog.yitinglove.cn/post/linux_shell/2015-08-20-xargs%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/</link><pubDate>Thu, 20 Aug 2015 19:16:56 +0800</pubDate><guid>http://blog.yitinglove.cn/post/linux_shell/2015-08-20-xargs%E7%94%A8%E6%B3%95%E8%AF%A6%E8%A7%A3/</guid><description>&lt;h2 id="前言">前言&lt;/h2>
&lt;p>　最近我从svn上checkout出来了一个文件夹,然后加入了git的跟踪目录.用过svn的同学可能知道,这个文件夹里面每一层级都有个.svn隐藏文件夹,需要删除他们.本来我准备笨拙地一个一个手动删除的,一位同事在我面前敲了大概是&lt;code>$find . -type d -name &amp;quot;*.svn&amp;quot; | xargs rm -rf&lt;/code>这样的命令,顿时觉得很高端大气上档次.刚好新学了Markdown,就顺便整理下xargs的用法,练练手.&lt;a href="http://czmmiao.iteye.com/blog/1949225">参考网址&lt;/a>,当然更主要的参考来自于伟大的&lt;code>$man xargs&lt;/code>.&lt;/p></description></item></channel></rss>