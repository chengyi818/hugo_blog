<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on 为学日益,为道日损</title>
    <link>http://blog.yitinglove.cn/tags/python/</link>
    <description>Recent content in python on 为学日益,为道日损</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Fri, 19 Jan 2018 19:56:17 +0800</lastBuildDate><atom:link href="http://blog.yitinglove.cn/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Python虚拟机初始化</title>
      <link>http://blog.yitinglove.cn/2018-01-19-python%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%88%9D%E5%A7%8B%E5%8C%96/</link>
      <pubDate>Fri, 19 Jan 2018 19:56:17 +0800</pubDate>
      
      <guid>http://blog.yitinglove.cn/2018-01-19-python%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%88%9D%E5%A7%8B%E5%8C%96/</guid>
      <description>&lt;p&gt;阅读条件:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C语言基础, Python虚拟机基本了解&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;Python源码剖析&lt;/strong&gt;一书的第二部分主要讲述了虚拟机主循环是如何运行的.那么在命令行启动python之后,到执行主循环之前都经历了哪些事情呢?这是我们今天要解决的问题.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python对象模型之我见</title>
      <link>http://blog.yitinglove.cn/2018-01-14-python%E5%85%83%E7%B1%BB%E4%B9%8B%E6%88%91%E8%A7%81/</link>
      <pubDate>Sun, 14 Jan 2018 19:09:42 +0800</pubDate>
      
      <guid>http://blog.yitinglove.cn/2018-01-14-python%E5%85%83%E7%B1%BB%E4%B9%8B%E6%88%91%E8%A7%81/</guid>
      <description>&lt;p&gt;阅读条件:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C语言基础,Python对象模型基本了解&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;在深入学习Python的过程中,不可避免地会接触到这样的概念:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;在Python中一切都是对象&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个&lt;strong&gt;一切&lt;/strong&gt;甚至比我想象的还要深入,因为在Python的实现层面也都是用面向对象实现的.那么与对象模型相关的&lt;code&gt;类&lt;/code&gt;,&lt;code&gt;实例&lt;/code&gt;的概念是不是也是用面向对象实现的呢?是的,在Python中,类的定义本身也是一个对象.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Python虚拟机框架_上</title>
      <link>http://blog.yitinglove.cn/2017-12-09-python%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A1%86%E6%9E%B6-%E4%B8%8A/</link>
      <pubDate>Sat, 09 Dec 2017 20:22:50 +0800</pubDate>
      
      <guid>http://blog.yitinglove.cn/2017-12-09-python%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%A1%86%E6%9E%B6-%E4%B8%8A/</guid>
      <description>&lt;p&gt;阅读条件:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C语言基础, Python爱好者&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;h2 id=&#34;前言&#34;&gt;前言&lt;/h2&gt;
&lt;p&gt;前面我们已经谈到过python面向对象的实现.今天我们来看看Python虚拟机的基础.&lt;/p&gt;
&lt;p&gt;主要内容分为两个部分:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Python源码编译后的结果: .pyc文件和PyCodeObject对象.&lt;/li&gt;
&lt;li&gt;Python的模拟函数栈帧: PyFrameObject对象.&lt;/li&gt;
&lt;/ol&gt;</description>
    </item>
    
    <item>
      <title>Python对象模型</title>
      <link>http://blog.yitinglove.cn/2017-10-19-python%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/</link>
      <pubDate>Thu, 19 Oct 2017 19:16:56 +0800</pubDate>
      
      <guid>http://blog.yitinglove.cn/2017-10-19-python%E5%AF%B9%E8%B1%A1%E6%A8%A1%E5%9E%8B/</guid>
      <description>&lt;p&gt;阅读条件:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;C语言基础, Python爱好者&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;</description>
    </item>
    
    <item>
      <title>把Effective Python读薄之三</title>
      <link>http://blog.yitinglove.cn/2017-03-14-effective-python_3/</link>
      <pubDate>Tue, 14 Mar 2017 19:16:56 +0800</pubDate>
      
      <guid>http://blog.yitinglove.cn/2017-03-14-effective-python_3/</guid>
      <description>&lt;p&gt;本文是我总结的Effective Python的第三章&lt;/p&gt;
&lt;p&gt;阅读条件:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;掌握Python类的基本使用&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>把Effective Python读薄之二</title>
      <link>http://blog.yitinglove.cn/2017-02-18-effective-python_2/</link>
      <pubDate>Sat, 18 Feb 2017 19:16:56 +0800</pubDate>
      
      <guid>http://blog.yitinglove.cn/2017-02-18-effective-python_2/</guid>
      <description>&lt;p&gt;本文是我总结的Effective Python的第二章&lt;/p&gt;
&lt;p&gt;阅读条件:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;掌握Python基本语法&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>把Effective Python读薄之一</title>
      <link>http://blog.yitinglove.cn/2016-12-18-effective-python_1/</link>
      <pubDate>Sun, 18 Dec 2016 19:16:56 +0800</pubDate>
      
      <guid>http://blog.yitinglove.cn/2016-12-18-effective-python_1/</guid>
      <description>&lt;p&gt;这两天看到一篇博客,名为&amp;lt;把编程珠玑读薄&amp;gt;,是为名.&lt;/p&gt;
&lt;p&gt;本文是我总结的Effective Python的第一章&lt;/p&gt;
&lt;p&gt;阅读条件:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;掌握Python基本语法&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Python模块和包</title>
      <link>http://blog.yitinglove.cn/2016-11-26-python%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/</link>
      <pubDate>Sat, 26 Nov 2016 19:16:56 +0800</pubDate>
      
      <guid>http://blog.yitinglove.cn/2016-11-26-python%E6%A8%A1%E5%9D%97%E5%92%8C%E5%8C%85/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>
